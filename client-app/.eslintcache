[{"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\index.tsx":"1","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\Contexts.tsx":"3","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\App.tsx":"4","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Layout.js":"5","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\UserRecipes.tsx":"6","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Home.tsx":"7","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\CreateRecipe.tsx":"8","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayRecipe.tsx":"9","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Recipes.tsx":"10","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Register.tsx":"11","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Login.tsx":"12","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Account.tsx":"13","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\contexts\\authContext.tsx":"14","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\NoUserRoute.tsx":"15","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\ProtectedRoutes.tsx":"16","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBar.tsx":"17","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useUserRecipes.ts":"18","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useWeekmenu.ts":"19","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipes.ts":"20","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipe.ts":"21","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useTags.ts":"22","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\shoppingListGenerator.ts":"23","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeCard.tsx":"24","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayIngredients.tsx":"25","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipePickerModal.tsx":"26","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeCard.tsx":"27","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\SearchBar.tsx":"28","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Pagination.tsx":"29","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuLinks.tsx":"30","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\Logo.tsx":"31","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuToggle.tsx":"32","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBarContainer.tsx":"33","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeListModal.tsx":"34","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuItem.tsx":"35","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeSkeleton.tsx":"36","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\WeekMenuOptions.tsx":"37","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useHasChanged.ts":"38","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\ConfirmModal.tsx":"39","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\refreshFetch.ts":"40","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\storageActions.ts":"41"},{"size":771,"mtime":1611260600678,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":1611126747107,"results":"44","hashOfConfig":"43"},{"size":490,"mtime":1611298828125,"results":"45","hashOfConfig":"43"},{"size":1259,"mtime":1611303607947,"results":"46","hashOfConfig":"43"},{"size":371,"mtime":1611427767997,"results":"47","hashOfConfig":"43"},{"size":4213,"mtime":1611602705107,"results":"48","hashOfConfig":"43"},{"size":5884,"mtime":1611819286215,"results":"49","hashOfConfig":"43"},{"size":13774,"mtime":1611818630351,"results":"50","hashOfConfig":"43"},{"size":3329,"mtime":1611819242183,"results":"51","hashOfConfig":"43"},{"size":3596,"mtime":1611819333668,"results":"52","hashOfConfig":"43"},{"size":4564,"mtime":1611304099982,"results":"53","hashOfConfig":"43"},{"size":3529,"mtime":1611841573998,"results":"54","hashOfConfig":"43"},{"size":1091,"mtime":1611602127587,"results":"55","hashOfConfig":"43"},{"size":1702,"mtime":1611817834904,"results":"56","hashOfConfig":"43"},{"size":878,"mtime":1611303596327,"results":"57","hashOfConfig":"43"},{"size":888,"mtime":1611298828125,"results":"58","hashOfConfig":"43"},{"size":601,"mtime":1611299231971,"results":"59","hashOfConfig":"43"},{"size":879,"mtime":1611818548831,"results":"60","hashOfConfig":"43"},{"size":4320,"mtime":1611819766033,"results":"61","hashOfConfig":"43"},{"size":771,"mtime":1611818727742,"results":"62","hashOfConfig":"43"},{"size":579,"mtime":1611819401770,"results":"63","hashOfConfig":"43"},{"size":514,"mtime":1611815175543,"results":"64","hashOfConfig":"43"},{"size":1685,"mtime":1611602782453,"results":"65","hashOfConfig":"43"},{"size":3384,"mtime":1611426015054,"results":"66","hashOfConfig":"43"},{"size":1221,"mtime":1611298828124,"results":"67","hashOfConfig":"43"},{"size":3639,"mtime":1611298828125,"results":"68","hashOfConfig":"43"},{"size":2063,"mtime":1611298828125,"results":"69","hashOfConfig":"43"},{"size":6021,"mtime":1611649250122,"results":"70","hashOfConfig":"43"},{"size":1512,"mtime":1611298828125,"results":"71","hashOfConfig":"43"},{"size":2919,"mtime":1611304099981,"results":"72","hashOfConfig":"43"},{"size":406,"mtime":1611301423046,"results":"73","hashOfConfig":"43"},{"size":445,"mtime":1611298828125,"results":"74","hashOfConfig":"43"},{"size":585,"mtime":1611300241236,"results":"75","hashOfConfig":"43"},{"size":1258,"mtime":1611298828125,"results":"76","hashOfConfig":"43"},{"size":442,"mtime":1611304099980,"results":"77","hashOfConfig":"43"},{"size":887,"mtime":1611427995327,"results":"78","hashOfConfig":"43"},{"size":3923,"mtime":1611603558654,"results":"79","hashOfConfig":"43"},{"size":863,"mtime":1611841594894,"results":"80","hashOfConfig":"43"},{"size":1183,"mtime":1611602730487,"results":"81","hashOfConfig":"43"},{"size":1563,"mtime":1611817604482,"results":"82","hashOfConfig":"43"},{"size":936,"mtime":1611817564189,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"fxq1k9",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\index.tsx",[],["171","172"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\Contexts.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\App.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Layout.js",[],["173","174"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\UserRecipes.tsx",["175"],"﻿import {\r\n  Spinner,\r\n  Text,\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useToast,\r\n  Center,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tr,\r\n  Th,\r\n  Tbody,\r\n  Td,\r\n  WrapItem,\r\n  Wrap,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useUserRecipes } from \"../hooks/useUserRecipes\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { ConfirmModal } from \"./ConfirmModal\";\r\n\r\ninterface RecipeInfo {\r\n  id: number | null;\r\n  title: string | null;\r\n}\r\n\r\nexport const UserRecipes = () => {\r\n  const [currentItems, setCurrentItems] = useState<RecipeInfo>({\r\n    id: null,\r\n    title: null,\r\n  });\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { user } = useContext(AuthContext);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const { data, loading, mutate, empty } = useUserRecipes(user?.token);\r\n\r\n  const onDelete = async () => {\r\n    const response = await fetch(\"recipe/\" + currentItems.id, {\r\n      method: \"DELETE\",\r\n      headers: !user?.token ? {} : { Authorization: `Bearer ${user.token}` },\r\n      body: null,\r\n    });\r\n    if (response.ok) {\r\n      mutate((recipes) => {\r\n        if (!recipes) {\r\n          return;\r\n        }\r\n        const filteredRecipes = recipes!.filter(\r\n          (recipe) => recipe.id !== currentItems.id\r\n        );\r\n        return [...filteredRecipes];\r\n      });\r\n      toast({\r\n        title: \"Recipe Deleted.\",\r\n        description: `Successfully deleted ${currentItems.title}`,\r\n        status: \"success\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ConfirmModal\r\n        title=\"Delete Recipe\"\r\n        bodyText=\"This will permanently delete your recipe.\"\r\n        buttonAction={onDelete}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        primaryButtonText=\"Delete\"\r\n      />\r\n      <Center>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : empty ? (\r\n          <VStack spacing={4}>\r\n            <Heading color=\"grey.500\">You have no recipes..</Heading>\r\n            <Center>\r\n              <Button\r\n                color=\"pink.500\"\r\n                onClick={() => history.push(\"/create-recipes\")}\r\n              >\r\n                Create One?\r\n              </Button>\r\n            </Center>\r\n          </VStack>\r\n        ) : (\r\n          <Table variant=\"simple\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Title</Th>\r\n                <Th>Short description</Th>\r\n                <Th>Actions</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {data!.map((recipe) => (\r\n                <Tr key={recipe.id}>\r\n                  <Td>\r\n                    <Text fontWeight=\"bold\">{recipe.title}</Text>\r\n                  </Td>\r\n                  <Td>\r\n                    <Box maxW={[70, 150]}>\r\n                      <Text isTruncated>{recipe.shortDescription}</Text>\r\n                    </Box>\r\n                  </Td>\r\n                  <Td>\r\n                    <Wrap>\r\n                      <WrapItem>\r\n                        <Button\r\n                          colorScheme=\"yellow\"\r\n                          variant=\"solid\"\r\n                          onClick={() => history.push(`edit/${recipe.id}`)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </WrapItem>\r\n                      <WrapItem>\r\n                        <Button\r\n                          colorScheme=\"pink\"\r\n                          variant=\"solid\"\r\n                          onClick={() => {\r\n                            setCurrentItems({\r\n                              id: recipe.id,\r\n                              title: recipe.title,\r\n                            });\r\n                            onOpen();\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </WrapItem>\r\n                    </Wrap>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        )}\r\n      </Center>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Home.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\CreateRecipe.tsx",["176"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayRecipe.tsx",["177"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Recipes.tsx",["178","179"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Register.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Login.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Account.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\contexts\\authContext.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\NoUserRoute.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\ProtectedRoutes.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBar.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useUserRecipes.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useWeekmenu.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipes.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipe.ts",["180"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useTags.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\shoppingListGenerator.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeCard.tsx",["181"],"﻿import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Text,\r\n  Spinner,\r\n  Divider,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Center,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { Recipe } from \"../types\";\r\nimport { RepeatIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ntype Props = {\r\n  recipe: Recipe;\r\n  onSwap: (id: number) => void;\r\n  openRecipePicker: () => void;\r\n  setCurrentItem: React.Dispatch<React.SetStateAction<number | undefined>>;\r\n  setType: React.Dispatch<\r\n    React.SetStateAction<\"search\" | \"myrecipe\" | undefined>\r\n  >;\r\n  token: string | null | undefined;\r\n};\r\n\r\nexport const MiniRecipeCard: React.FC<Props> = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const onSwap = async () => {\r\n    setLoading(true);\r\n    props.onSwap(props.recipe.id);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box\r\n        minW=\"8em\"\r\n        maxW=\"sm\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"hidden\"\r\n        _hover={{\r\n          boxShadow: \"rgba(0, 0, 0, 0.22) 0px 19px 43px\",\r\n          cursor: \"pointer\",\r\n          //transform: \"translate3d(0px, -1px, 0px)\"\r\n        }}\r\n      >\r\n        <VStack>\r\n          <Box onClick={() => history.push(`/recipes/${props.recipe.id}`)}>\r\n            <Image\r\n              src={props.recipe.imgUrl}\r\n              alt={props.recipe.title}\r\n              objectFit=\"cover\"\r\n              overflow=\"hidden\"\r\n              height=\"200px\"\r\n              width=\"300px\"\r\n            />\r\n            <Center pt={1}>\r\n              <Heading size=\"sm\">{props.recipe.title}</Heading>\r\n            </Center>\r\n          </Box>\r\n          <Box pb={2}>\r\n            <HStack justify=\"space-betweens\">\r\n              <Text>Score: {props.recipe.vote}</Text>\r\n              <Box h=\"25px\">\r\n                <Divider orientation=\"vertical\" />\r\n              </Box>\r\n              <Menu>\r\n                <Tooltip label=\"Swap recipe\" fontSize=\"md\">\r\n                  <MenuButton\r\n                    as={Button}\r\n                    size=\"xs\"\r\n                    colorScheme=\"pink\"\r\n                    variant=\"outline\"\r\n                  >\r\n                    {loading ? <Spinner size=\"xs\" /> : <RepeatIcon />}\r\n                  </MenuButton>\r\n                </Tooltip>\r\n                <MenuList>\r\n                  <MenuItem onClick={() => onSwap()}>Random Swap</MenuItem>\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      props.setCurrentItem(props.recipe.id);\r\n                      props.openRecipePicker();\r\n                      props.setType(\"search\");\r\n                    }}\r\n                  >\r\n                    Search\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    isDisabled={!props.token}\r\n                    onClick={() => {\r\n                      props.setCurrentItem(props.recipe.id);\r\n                      props.openRecipePicker();\r\n                      props.setType(\"myrecipe\");\r\n                    }}\r\n                  >\r\n                    My recipes\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </Menu>\r\n            </HStack>\r\n          </Box>\r\n        </VStack>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayIngredients.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipePickerModal.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeCard.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\SearchBar.tsx",["182"],"﻿import {\r\n  Box,\r\n  Button,\r\n  HStack,\r\n  Input,\r\n  Select,\r\n  Tag,\r\n  TagCloseButton,\r\n  TagLabel,\r\n  VStack,\r\n  Wrap,\r\n  WrapItem,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Field,\r\n  FieldArray,\r\n  FieldArrayRenderProps,\r\n  FieldProps,\r\n  Form,\r\n  Formik,\r\n  FormikProps,\r\n} from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTags } from \"../hooks/useTags\";\r\nimport {\r\n  StringParam,\r\n  NumberParam,\r\n  useQueryParams,\r\n  ArrayParam,\r\n  withDefault,\r\n} from \"use-query-params\";\r\nimport _ from \"lodash\";\r\n\r\ninterface Props {}\r\n\r\ninterface IQueryParams {\r\n  tags: (null | string)[] | never[];\r\n  pageSize: number;\r\n  searchText: string;\r\n}\r\n\r\nconst initialQuery = {\r\n  tags: [],\r\n  pageSize: 10,\r\n  searchText: \"\",\r\n};\r\n\r\nexport const SearchBar: React.FC<Props> = () => {\r\n  const [currentQuery, setCurrentQuery] = useState<IQueryParams>(initialQuery);\r\n\r\n  const { data, loading, empty } = useTags();\r\n\r\n  let boundArrayHelpers: FieldArrayRenderProps;\r\n  const bindArrayHelpers = (arrayHelpers: FieldArrayRenderProps) => {\r\n    boundArrayHelpers = arrayHelpers;\r\n  };\r\n\r\n  const [query, setQuery] = useQueryParams({\r\n    searchText: StringParam,\r\n    pageNumber: NumberParam,\r\n    pageSize: NumberParam,\r\n    tags: withDefault(ArrayParam, []),\r\n  });\r\n\r\n  const options = [2, 5, 10, 20];\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      setCurrentQuery({\r\n        tags: query.tags || [],\r\n        pageSize: query.pageSize || 10,\r\n        searchText: query.searchText || \"\",\r\n      });\r\n    }\r\n  }, [query]);\r\n\r\n  const onReset = () => {\r\n    setQuery({ pageNumber: 1, ...initialQuery });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={currentQuery}\r\n      onSubmit={async (values, actions) => {\r\n        setQuery({ pageNumber: 1, ...values });\r\n      }}\r\n    >\r\n      {(props: FormikProps<IQueryParams>) => {\r\n        const { values, isSubmitting } = props;\r\n\r\n        return (\r\n          <Form>\r\n            <Box pb={2}>\r\n              <VStack alignItems=\"flex-end\">\r\n                <Field name=\"searchText\">\r\n                  {({ form, field }: FieldProps) => (\r\n                    <Input\r\n                      {...field}\r\n                      id=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      variant=\"flushed\"\r\n                    />\r\n                  )}\r\n                </Field>\r\n                <Wrap spacing={2} justify=\"flex-end\">\r\n                  <WrapItem>\r\n                    <FieldArray\r\n                      name=\"tags\"\r\n                      render={(arrayHelpers) => {\r\n                        bindArrayHelpers(arrayHelpers);\r\n                        return (\r\n                          <div>\r\n                            <Box pb={2}>\r\n                              <Select\r\n                                placeholder=\"Select tags\"\r\n                                onChange={(e) => {\r\n                                  arrayHelpers.push(e.target.value);\r\n                                }}\r\n                              >\r\n                                {!loading &&\r\n                                  !empty &&\r\n                                  data!.map((tag) => (\r\n                                    <option key={tag.id} value={tag.name}>\r\n                                      {tag.name}\r\n                                    </option>\r\n                                  ))}\r\n                              </Select>\r\n                            </Box>\r\n                          </div>\r\n                        );\r\n                      }}\r\n                    />\r\n                  </WrapItem>\r\n                  <WrapItem>\r\n                    <Field name=\"pageSize\">\r\n                      {({ form, field }: FieldProps) => (\r\n                        <Box>\r\n                          <Select placeholder=\"Show\" {...field} id=\"pageSize\">\r\n                            {options.map((opt) => (\r\n                              <option key={opt} value={opt}>\r\n                                {opt}\r\n                              </option>\r\n                            ))}\r\n                          </Select>\r\n                        </Box>\r\n                      )}\r\n                    </Field>\r\n                  </WrapItem>\r\n                  <WrapItem>\r\n                    <HStack>\r\n                      <Box>\r\n                        <Button onClick={() => onReset()}>Reset</Button>\r\n                      </Box>\r\n                      <Box>\r\n                        <Button\r\n                          isLoading={isSubmitting}\r\n                          type=\"submit\"\r\n                          variant={\r\n                            values.pageSize !== query.pageSize ||\r\n                            !_.isEqual(values.tags, query.tags) ||\r\n                            values.searchText !== query.searchText\r\n                              ? \"solid\"\r\n                              : \"outline\"\r\n                          }\r\n                          colorScheme=\"pink\"\r\n                        >\r\n                          Search\r\n                        </Button>\r\n                      </Box>\r\n                    </HStack>\r\n                  </WrapItem>\r\n                </Wrap>\r\n              </VStack>\r\n              <HStack spacing={4}>\r\n                {values.tags &&\r\n                  values.tags.length > 0 &&\r\n                  (values!.tags as string[]).map((tag: string, i: number) => (\r\n                    <Tag\r\n                      key={i}\r\n                      size=\"lg\"\r\n                      borderRadius=\"full\"\r\n                      variant=\"solid\"\r\n                      colorScheme=\"green\"\r\n                    >\r\n                      <TagLabel>{tag}</TagLabel>\r\n                      <TagCloseButton\r\n                        onClick={() => boundArrayHelpers.remove(i)}\r\n                      />\r\n                    </Tag>\r\n                  ))}\r\n              </HStack>\r\n            </Box>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Pagination.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuLinks.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\Logo.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuToggle.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBarContainer.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeListModal.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuItem.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeSkeleton.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\WeekMenuOptions.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useHasChanged.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\ConfirmModal.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\refreshFetch.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\storageActions.ts",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","messageId":"190","fix":"191"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","messageId":"190","fix":"192"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","messageId":"190","fix":"193"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":27},{"ruleId":"194","severity":1,"message":"198","line":32,"column":23,"nodeType":"196","messageId":"197","endLine":32,"endColumn":31},{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","messageId":"190","fix":"199"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","messageId":"190","fix":"200"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","messageId":"190","fix":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"204","text":"205"},{"range":"206","text":"205"},{"range":"207","text":"205"},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'pageSize' is assigned a value but never used.",{"range":"208","text":"205"},{"range":"209","text":"205"},{"range":"210","text":"205"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]