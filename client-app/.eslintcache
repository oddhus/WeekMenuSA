[{"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\index.tsx":"1","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\Contexts.tsx":"3","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\App.tsx":"4","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Layout.js":"5","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\UserRecipes.tsx":"6","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Home.tsx":"7","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\CreateRecipe.tsx":"8","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayRecipe.tsx":"9","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Recipes.tsx":"10","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Register.tsx":"11","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Login.tsx":"12","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Account.tsx":"13","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\contexts\\authContext.tsx":"14","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\NoUserRoute.tsx":"15","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\ProtectedRoutes.tsx":"16","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBar.tsx":"17","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useUserRecipes.ts":"18","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useWeekmenu.ts":"19","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipes.ts":"20","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipe.ts":"21","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useTags.ts":"22","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\shoppingListGenerator.ts":"23","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeCard.tsx":"24","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayIngredients.tsx":"25","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipePickerModal.tsx":"26","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeCard.tsx":"27","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\SearchBar.tsx":"28","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Pagination.tsx":"29","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuLinks.tsx":"30","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\Logo.tsx":"31","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuToggle.tsx":"32","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBarContainer.tsx":"33","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeListModal.tsx":"34","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuItem.tsx":"35","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeSkeleton.tsx":"36","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\WeekMenuOptions.tsx":"37","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useHasChanged.ts":"38","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\ConfirmModal.tsx":"39"},{"size":771,"mtime":1611260600678,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":1611126747107,"results":"42","hashOfConfig":"41"},{"size":490,"mtime":1611298828125,"results":"43","hashOfConfig":"41"},{"size":1259,"mtime":1611303607947,"results":"44","hashOfConfig":"41"},{"size":371,"mtime":1611427767997,"results":"45","hashOfConfig":"41"},{"size":4213,"mtime":1611602705107,"results":"46","hashOfConfig":"41"},{"size":5897,"mtime":1611603139961,"results":"47","hashOfConfig":"41"},{"size":13802,"mtime":1611602782431,"results":"48","hashOfConfig":"41"},{"size":3602,"mtime":1611304099981,"results":"49","hashOfConfig":"41"},{"size":3789,"mtime":1611648873771,"results":"50","hashOfConfig":"41"},{"size":4564,"mtime":1611304099982,"results":"51","hashOfConfig":"41"},{"size":3559,"mtime":1611299213653,"results":"52","hashOfConfig":"41"},{"size":1091,"mtime":1611602127587,"results":"53","hashOfConfig":"41"},{"size":2385,"mtime":1611253617269,"results":"54","hashOfConfig":"41"},{"size":878,"mtime":1611303596327,"results":"55","hashOfConfig":"41"},{"size":888,"mtime":1611298828125,"results":"56","hashOfConfig":"41"},{"size":601,"mtime":1611299231971,"results":"57","hashOfConfig":"41"},{"size":797,"mtime":1611298828143,"results":"58","hashOfConfig":"41"},{"size":4806,"mtime":1611603004123,"results":"59","hashOfConfig":"41"},{"size":883,"mtime":1611298828125,"results":"60","hashOfConfig":"41"},{"size":671,"mtime":1611304099981,"results":"61","hashOfConfig":"41"},{"size":525,"mtime":1611298828125,"results":"62","hashOfConfig":"41"},{"size":1685,"mtime":1611602782453,"results":"63","hashOfConfig":"41"},{"size":3384,"mtime":1611426015054,"results":"64","hashOfConfig":"41"},{"size":1221,"mtime":1611298828124,"results":"65","hashOfConfig":"41"},{"size":3639,"mtime":1611298828125,"results":"66","hashOfConfig":"41"},{"size":2063,"mtime":1611298828125,"results":"67","hashOfConfig":"41"},{"size":6021,"mtime":1611649250122,"results":"68","hashOfConfig":"41"},{"size":1512,"mtime":1611298828125,"results":"69","hashOfConfig":"41"},{"size":2919,"mtime":1611304099981,"results":"70","hashOfConfig":"41"},{"size":406,"mtime":1611301423046,"results":"71","hashOfConfig":"41"},{"size":445,"mtime":1611298828125,"results":"72","hashOfConfig":"41"},{"size":585,"mtime":1611300241236,"results":"73","hashOfConfig":"41"},{"size":1258,"mtime":1611298828125,"results":"74","hashOfConfig":"41"},{"size":442,"mtime":1611304099980,"results":"75","hashOfConfig":"41"},{"size":887,"mtime":1611427995327,"results":"76","hashOfConfig":"41"},{"size":3923,"mtime":1611603558654,"results":"77","hashOfConfig":"41"},{"size":897,"mtime":1611648598308,"results":"78","hashOfConfig":"41"},{"size":1183,"mtime":1611602730487,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"fxq1k9",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\index.tsx",[],["164","165"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\Contexts.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\App.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Layout.js",[],["166","167"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\UserRecipes.tsx",["168"],"﻿import {\r\n  Spinner,\r\n  Text,\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useToast,\r\n  Center,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tr,\r\n  Th,\r\n  Tbody,\r\n  Td,\r\n  WrapItem,\r\n  Wrap,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useUserRecipes } from \"../hooks/useUserRecipes\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { ConfirmModal } from \"./ConfirmModal\";\r\n\r\ninterface RecipeInfo {\r\n  id: number | null;\r\n  title: string | null;\r\n}\r\n\r\nexport const UserRecipes = () => {\r\n  const [currentItems, setCurrentItems] = useState<RecipeInfo>({\r\n    id: null,\r\n    title: null,\r\n  });\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { user } = useContext(AuthContext);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const { data, loading, mutate, empty } = useUserRecipes(user?.token);\r\n\r\n  const onDelete = async () => {\r\n    const response = await fetch(\"recipe/\" + currentItems.id, {\r\n      method: \"DELETE\",\r\n      headers: !user?.token ? {} : { Authorization: `Bearer ${user.token}` },\r\n      body: null,\r\n    });\r\n    if (response.ok) {\r\n      mutate((recipes) => {\r\n        if (!recipes) {\r\n          return;\r\n        }\r\n        const filteredRecipes = recipes!.filter(\r\n          (recipe) => recipe.id !== currentItems.id\r\n        );\r\n        return [...filteredRecipes];\r\n      });\r\n      toast({\r\n        title: \"Recipe Deleted.\",\r\n        description: `Successfully deleted ${currentItems.title}`,\r\n        status: \"success\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ConfirmModal\r\n        title=\"Delete Recipe\"\r\n        bodyText=\"This will permanently delete your recipe.\"\r\n        buttonAction={onDelete}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        primaryButtonText=\"Delete\"\r\n      />\r\n      <Center>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : empty ? (\r\n          <VStack spacing={4}>\r\n            <Heading color=\"grey.500\">You have no recipes..</Heading>\r\n            <Center>\r\n              <Button\r\n                color=\"pink.500\"\r\n                onClick={() => history.push(\"/create-recipes\")}\r\n              >\r\n                Create One?\r\n              </Button>\r\n            </Center>\r\n          </VStack>\r\n        ) : (\r\n          <Table variant=\"simple\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Title</Th>\r\n                <Th>Short description</Th>\r\n                <Th>Actions</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {data!.map((recipe) => (\r\n                <Tr key={recipe.id}>\r\n                  <Td>\r\n                    <Text fontWeight=\"bold\">{recipe.title}</Text>\r\n                  </Td>\r\n                  <Td>\r\n                    <Box maxW={[70, 150]}>\r\n                      <Text isTruncated>{recipe.shortDescription}</Text>\r\n                    </Box>\r\n                  </Td>\r\n                  <Td>\r\n                    <Wrap>\r\n                      <WrapItem>\r\n                        <Button\r\n                          colorScheme=\"yellow\"\r\n                          variant=\"solid\"\r\n                          onClick={() => history.push(`edit/${recipe.id}`)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </WrapItem>\r\n                      <WrapItem>\r\n                        <Button\r\n                          colorScheme=\"pink\"\r\n                          variant=\"solid\"\r\n                          onClick={() => {\r\n                            setCurrentItems({\r\n                              id: recipe.id,\r\n                              title: recipe.title,\r\n                            });\r\n                            onOpen();\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </WrapItem>\r\n                    </Wrap>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        )}\r\n      </Center>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Home.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\CreateRecipe.tsx",["169"],"﻿import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n  Select,\r\n  HStack,\r\n  Textarea,\r\n  Tag,\r\n  TagLabel,\r\n  TagCloseButton,\r\n  Box,\r\n  Stack,\r\n  Grid,\r\n  GridItem,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Field,\r\n  FieldArray,\r\n  FieldProps,\r\n  Form,\r\n  Formik,\r\n  FormikProps,\r\n} from \"formik\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\nimport { useRecipe } from \"../hooks/useRecipe\";\r\nimport { useTags } from \"../hooks/useTags\";\r\nimport { useUserRecipes } from \"../hooks/useUserRecipes\";\r\nimport { Ingredients, Recipe } from \"../types\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\n\r\ninterface FormValues {\r\n  title: string;\r\n  shortDescription: string;\r\n  description: string;\r\n  tags: string[];\r\n  ingredients: Ingredients[];\r\n  imgUrl: string;\r\n}\r\n\r\nconst suffix = [\"pcs\", \"kg\", \"g\", \"ts\", \"L\", \"dL\"];\r\n\r\nexport const CreateRecipe = () => {\r\n  const [initialValues, setInitialValues] = useState<FormValues>({\r\n    title: \"\",\r\n    shortDescription: \"\",\r\n    description: \"\",\r\n    tags: [],\r\n    ingredients: [],\r\n    imgUrl: \"\",\r\n  });\r\n  const { recipeId } = useParams<{ recipeId: string | undefined }>();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const { data, empty, loading } = useTags();\r\n  const { data: recipeData, loading: recipeLoading } = useRecipe(\r\n    recipeId,\r\n    user?.token\r\n  );\r\n  const { mutate } = useUserRecipes(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (!recipeLoading && recipeData) {\r\n      setInitialValues({\r\n        title: recipeData.title,\r\n        shortDescription: recipeData.shortDescription,\r\n        description: recipeData.description,\r\n        tags: Object.values(recipeData.tags).map((tag) => tag.name),\r\n        ingredients: recipeData.ingredients,\r\n        imgUrl: recipeData.imgUrl,\r\n      });\r\n    }\r\n  }, [recipeLoading, recipeData]);\r\n\r\n  const SignupSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    shortDescription: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(120, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    description: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(500, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    imgUrl: Yup.string().max(200, \"Too Long!\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={initialValues}\r\n      onSubmit={async (values, actions) => {\r\n        console.log(values);\r\n        const response = await fetch(\r\n          recipeId ? \"/recipe/\" + recipeId : \"recipe\",\r\n          {\r\n            method: recipeId ? \"PUT\" : \"POST\",\r\n            headers: !user?.token\r\n              ? { \"Content-Type\": \"application/json\" }\r\n              : {\r\n                  \"Content-Type\": \"application/json\",\r\n                  Authorization: `Bearer ${user?.token}`,\r\n                },\r\n            body: JSON.stringify(values),\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          toast({\r\n            title: recipeId ? \"Recipe updated.\" : \"Recipe created\",\r\n            description: recipeId\r\n              ? \"Your recipe was successfully updated\"\r\n              : \"Your recipe was successfully created\",\r\n            status: \"success\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n\r\n          const recipeResponse = (await response.json()) as Recipe;\r\n\r\n          mutate((userRecipes) => {\r\n            if (!userRecipes) {\r\n              return;\r\n            }\r\n            if (recipeId) {\r\n              const filteredRecipes = userRecipes!.filter(\r\n                (recipe) => recipe.id.toString() !== recipeId\r\n              );\r\n              return [...filteredRecipes, recipeResponse];\r\n            } else {\r\n              return [...userRecipes, recipeResponse];\r\n            }\r\n          });\r\n\r\n          history.push(\"/my-recipes\");\r\n        } else {\r\n          toast({\r\n            title: \"Error\",\r\n            description: recipeId\r\n              ? \"Your recipe was not updated\"\r\n              : \"Your recipe was not created\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      }}\r\n      validationSchema={SignupSchema}\r\n    >\r\n      {(props: FormikProps<FormValues>) => {\r\n        const { values, isSubmitting } = props;\r\n        return (\r\n          <Form>\r\n            <Field name=\"title\">\r\n              {({ form, field }: FieldProps) => (\r\n                <FormControl\r\n                  isInvalid={!!form.errors?.title && !!form.touched?.title}\r\n                >\r\n                  <FormLabel htmlFor=\"title\">Title</FormLabel>\r\n                  <Input {...field} id=\"title\" placeholder=\"title\" />\r\n                  <FormErrorMessage>{form.errors.title}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"shortDescription\">\r\n              {({ form, field }: FieldProps) => (\r\n                <FormControl\r\n                  isInvalid={\r\n                    !!form.errors?.shortDescription &&\r\n                    !!form.touched?.shortDescription\r\n                  }\r\n                >\r\n                  <FormLabel htmlFor=\"shortDescription\">\r\n                    Short Description\r\n                  </FormLabel>\r\n                  <Textarea\r\n                    {...field}\r\n                    id=\"shortDescription\"\r\n                    placeholder=\"Short Description\"\r\n                  />\r\n                  <FormErrorMessage>\r\n                    {form.errors.shortDescription}\r\n                  </FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"description\">\r\n              {({ form, field }: FieldProps) => (\r\n                <FormControl\r\n                  isInvalid={\r\n                    !!form.errors?.description && !!form.touched?.description\r\n                  }\r\n                >\r\n                  <FormLabel htmlFor=\"description\">Description</FormLabel>\r\n                  <Textarea\r\n                    {...field}\r\n                    id=\"description\"\r\n                    placeholder=\"Description\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.description}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"imgUrl\">\r\n              {({ form, field }: FieldProps) => (\r\n                <FormControl\r\n                  isInvalid={!!form.errors?.imgUrl && !!form.touched?.imgUrl}\r\n                >\r\n                  <FormLabel htmlFor=\"imgUrl\">ImageUrl</FormLabel>\r\n                  <Input {...field} id=\"imgUrl\" placeholder=\"imgUrl\" />\r\n                  <FormErrorMessage>{form.errors.imgUrl}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <FormLabel htmlFor={`tags`} pt={1}>\r\n              Tags\r\n            </FormLabel>\r\n            <FieldArray\r\n              name=\"tags\"\r\n              render={(arrayHelpers) => (\r\n                <div>\r\n                  <Box pb={2}>\r\n                    <Select\r\n                      placeholder=\"Select tags\"\r\n                      onChange={(e) => arrayHelpers.push(e.target.value)}\r\n                    >\r\n                      {!loading &&\r\n                        !empty &&\r\n                        data!.map((tag) => (\r\n                          <option key={tag.id} value={tag.name}>\r\n                            {tag.name}\r\n                          </option>\r\n                        ))}\r\n                    </Select>\r\n                  </Box>\r\n                  <HStack spacing={4}>\r\n                    {values.tags &&\r\n                      values.tags.length > 0 &&\r\n                      values.tags.map((tag, index) => (\r\n                        <Tag\r\n                          key={index}\r\n                          size=\"lg\"\r\n                          borderRadius=\"full\"\r\n                          variant=\"solid\"\r\n                          colorScheme=\"green\"\r\n                        >\r\n                          <TagLabel>{tag}</TagLabel>\r\n                          <TagCloseButton\r\n                            onClick={() => arrayHelpers.remove(index)}\r\n                          />\r\n                        </Tag>\r\n                      ))}\r\n                  </HStack>\r\n                </div>\r\n              )}\r\n            />\r\n            <FormLabel htmlFor={`ingredients`} pt={1}>\r\n              Ingredients\r\n            </FormLabel>\r\n            <FieldArray\r\n              name=\"ingredients\"\r\n              render={(arrayHelpers) => (\r\n                <div>\r\n                  <Stack spacing={4}>\r\n                    {values.ingredients &&\r\n                      values.ingredients.length > 0 &&\r\n                      values.ingredients.map((ingredients, index) => (\r\n                        <Grid\r\n                          key={index}\r\n                          templateColumns=\"repeat(6, 1fr)\"\r\n                          gap={2}\r\n                        >\r\n                          <GridItem colSpan={3}>\r\n                            <Field name={`ingredients[${index}].name`}>\r\n                              {({ form, field }: FieldProps) => {\r\n                                return (\r\n                                  <FormControl\r\n                                    isInvalid={\r\n                                      !!form.errors?.ingredients &&\r\n                                      !!form.touched?.ingredients\r\n                                    }\r\n                                  >\r\n                                    <Input\r\n                                      {...field}\r\n                                      id={`ingredients[${index}].name`}\r\n                                      placeholder=\"Ingredient\"\r\n                                    />\r\n                                    <FormErrorMessage>\r\n                                      {form.errors.name}\r\n                                    </FormErrorMessage>\r\n                                  </FormControl>\r\n                                );\r\n                              }}\r\n                            </Field>\r\n                          </GridItem>\r\n                          <GridItem colSpan={1}>\r\n                            <Field name={`ingredients[${index}].amount`}>\r\n                              {({ form, field }: FieldProps) => (\r\n                                <FormControl\r\n                                  isInvalid={\r\n                                    !!form.errors?.ingredients &&\r\n                                    !!form.touched?.ingredients\r\n                                  }\r\n                                >\r\n                                  <Input\r\n                                    {...field}\r\n                                    id={`ingredients[${index}].amount`}\r\n                                    placeholder=\"Amount\"\r\n                                  />\r\n                                  <FormErrorMessage>\r\n                                    {form.errors.name}\r\n                                  </FormErrorMessage>\r\n                                </FormControl>\r\n                              )}\r\n                            </Field>\r\n                          </GridItem>\r\n                          <GridItem colSpan={1}>\r\n                            <Field name={`ingredients[${index}].suffix`}>\r\n                              {({ form, field }: FieldProps) => (\r\n                                <FormControl\r\n                                  isInvalid={\r\n                                    !!form.errors?.ingredients &&\r\n                                    !!form.touched?.ingredients\r\n                                  }\r\n                                >\r\n                                  <Select\r\n                                    id={`ingredients[${index}].suffix`}\r\n                                    placeholder=\"Suffix\"\r\n                                    {...field}\r\n                                  >\r\n                                    {suffix.map((s) => (\r\n                                      <option key={s} value={s}>\r\n                                        {s}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Select>\r\n                                  <FormErrorMessage>\r\n                                    {form.errors.name}\r\n                                  </FormErrorMessage>\r\n                                </FormControl>\r\n                              )}\r\n                            </Field>\r\n                          </GridItem>\r\n                          <GridItem colSpan={1}>\r\n                            <Button onClick={() => arrayHelpers.remove(index)}>\r\n                              -\r\n                            </Button>\r\n                          </GridItem>\r\n                        </Grid>\r\n                      ))}\r\n                    <Button\r\n                      onClick={() =>\r\n                        arrayHelpers.push({ name: \"\", amount: 1, suffix: \"\" })\r\n                      }\r\n                    >\r\n                      +\r\n                    </Button>\r\n                  </Stack>\r\n                </div>\r\n              )}\r\n            />\r\n            <Button\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isLoading={isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              {recipeId ? \"Update\" : \"Submit\"}\r\n            </Button>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayRecipe.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Recipes.tsx",["170","171"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Register.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Login.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Account.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\contexts\\authContext.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\NoUserRoute.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\ProtectedRoutes.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBar.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useUserRecipes.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useWeekmenu.ts",["172","173"],"import { useEffect, useState } from \"react\";\r\nimport { number } from \"yup/lib/locale\";\r\nimport { Recipe } from \"../types\";\r\n\r\nconst weekmenuItemFetcher = async (\r\n  token: string | null | undefined,\r\n  excludeIds: string\r\n) => {\r\n  const response = await fetch(\"recipe/weekmenu/item\" + excludeIds, {\r\n    headers: !token ? {} : { Authorization: `Bearer ${token}` },\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nconst weekmenuSpecificItemFetcher = async (\r\n  token: string | null | undefined,\r\n  id: number\r\n) => {\r\n  const response = await fetch(\"recipe/\" + id, {\r\n    headers: !token ? {} : { Authorization: `Bearer ${token}` },\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nconst weekmenuFetcher = async (\r\n  token: string | null | undefined,\r\n  amount: number,\r\n  urlTags: string\r\n) => {\r\n  console.log(urlTags);\r\n  const response = await fetch(\r\n    \"/recipe/weekmenu?weekLength=\" + amount + urlTags,\r\n    {\r\n      headers: !token ? {} : { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport function useWeekmenu(\r\n  amount: number,\r\n  tags: string | null,\r\n  token: string | null | undefined\r\n) {\r\n  const [data, setData] = useState<Recipe[] | null>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    let isCanceled = false;\r\n    const controller = new AbortController();\r\n\r\n    const myWeekMenu = localStorage.getItem(\"weekmenu\");\r\n    let parsedData;\r\n    if (myWeekMenu) {\r\n      try {\r\n        parsedData = JSON.parse(myWeekMenu);\r\n      } catch (e) {\r\n        localStorage.removeItem(\"weekmenu\");\r\n        setError(e.message);\r\n      }\r\n    }\r\n\r\n    if (!parsedData || parsedData.length < 5) {\r\n      const urlTags = tags ? \"&\" + tags : \"\";\r\n      const runHandler = async () => {\r\n        try {\r\n          const response = await fetch(\r\n            \"recipe/weekmenu/?weekLength=\" + amount + urlTags,\r\n            {\r\n              headers: !token ? {} : { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          const data = await response.json();\r\n          if (isCanceled) {\r\n            return;\r\n          }\r\n          localStorage.setItem(\"weekmenu\", JSON.stringify(data));\r\n          setData(data);\r\n          setError(\"\");\r\n        } catch (e) {\r\n          setError(e.message);\r\n        }\r\n      };\r\n      runHandler();\r\n    } else {\r\n      setData(parsedData);\r\n    }\r\n\r\n    setLoading(false);\r\n\r\n    return () => {\r\n      isCanceled = true;\r\n      controller.abort();\r\n    };\r\n  }, [amount, token]);\r\n\r\n  const onSwap = async (id: number) => {\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n    if (!data) {\r\n      setError(\"No data to swap!\");\r\n      return;\r\n    }\r\n\r\n    const excludeRecipes = data.reduce((accumulator, recipe) => {\r\n      return accumulator + \"excludeId=\" + recipe.id + \"&\";\r\n    }, \"/?\");\r\n\r\n    try {\r\n      const recipe = await weekmenuItemFetcher(token, excludeRecipes);\r\n      if (recipe) {\r\n        const index = data.findIndex((recipe) => recipe.id === id);\r\n        const newWeekmenu = [\r\n          ...data.slice(0, index),\r\n          recipe,\r\n          ...data.slice(index + 1),\r\n        ];\r\n        localStorage.setItem(\"weekmenu\", JSON.stringify(newWeekmenu));\r\n        setData(newWeekmenu);\r\n        setError(\"\");\r\n      }\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const onIdSwap = async (oldId: number, newId: number) => {\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n    if (!data) {\r\n      setError(\"No data to swap!\");\r\n      return;\r\n    }\r\n\r\n    if (oldId === newId || data.find((r) => r.id === newId) !== undefined) {\r\n      setError(`Cannot swap recipe with ${oldId} with ${newId}!`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const recipe = await weekmenuSpecificItemFetcher(token, newId);\r\n      if (recipe) {\r\n        const index = data.findIndex((recipe) => recipe.id === oldId);\r\n        const newWeekmenu = [\r\n          ...data.slice(0, index),\r\n          recipe,\r\n          ...data.slice(index + 1),\r\n        ];\r\n        localStorage.setItem(\"weekmenu\", JSON.stringify(newWeekmenu));\r\n        setData(newWeekmenu);\r\n        setError(\"\");\r\n      }\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const onSwapAll = async (amount: number, tags: string | null) => {\r\n    setLoading(true);\r\n    const urlTags = tags ? \"&\" + tags : \"\";\r\n    try {\r\n      const data = await weekmenuFetcher(token, amount, urlTags);\r\n      localStorage.setItem(\"weekmenu\", JSON.stringify(data));\r\n      setData(data);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    data,\r\n    onSwap,\r\n    onSwapAll,\r\n    onIdSwap,\r\n  };\r\n}\r\n","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipes.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipe.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useTags.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\shoppingListGenerator.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeCard.tsx",["174"],"﻿import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Text,\r\n  Spinner,\r\n  Divider,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Center,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { Recipe } from \"../types\";\r\nimport { RepeatIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ntype Props = {\r\n  recipe: Recipe;\r\n  onSwap: (id: number) => void;\r\n  openRecipePicker: () => void;\r\n  setCurrentItem: React.Dispatch<React.SetStateAction<number | undefined>>;\r\n  setType: React.Dispatch<\r\n    React.SetStateAction<\"search\" | \"myrecipe\" | undefined>\r\n  >;\r\n  token: string | null | undefined;\r\n};\r\n\r\nexport const MiniRecipeCard: React.FC<Props> = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const onSwap = async () => {\r\n    setLoading(true);\r\n    props.onSwap(props.recipe.id);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box\r\n        minW=\"8em\"\r\n        maxW=\"sm\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"hidden\"\r\n        _hover={{\r\n          boxShadow: \"rgba(0, 0, 0, 0.22) 0px 19px 43px\",\r\n          cursor: \"pointer\",\r\n          //transform: \"translate3d(0px, -1px, 0px)\"\r\n        }}\r\n      >\r\n        <VStack>\r\n          <Box onClick={() => history.push(`/recipes/${props.recipe.id}`)}>\r\n            <Image\r\n              src={props.recipe.imgUrl}\r\n              alt={props.recipe.title}\r\n              objectFit=\"cover\"\r\n              overflow=\"hidden\"\r\n              height=\"200px\"\r\n              width=\"300px\"\r\n            />\r\n            <Center pt={1}>\r\n              <Heading size=\"sm\">{props.recipe.title}</Heading>\r\n            </Center>\r\n          </Box>\r\n          <Box pb={2}>\r\n            <HStack justify=\"space-betweens\">\r\n              <Text>Score: {props.recipe.vote}</Text>\r\n              <Box h=\"25px\">\r\n                <Divider orientation=\"vertical\" />\r\n              </Box>\r\n              <Menu>\r\n                <Tooltip label=\"Swap recipe\" fontSize=\"md\">\r\n                  <MenuButton\r\n                    as={Button}\r\n                    size=\"xs\"\r\n                    colorScheme=\"pink\"\r\n                    variant=\"outline\"\r\n                  >\r\n                    {loading ? <Spinner size=\"xs\" /> : <RepeatIcon />}\r\n                  </MenuButton>\r\n                </Tooltip>\r\n                <MenuList>\r\n                  <MenuItem onClick={() => onSwap()}>Random Swap</MenuItem>\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      props.setCurrentItem(props.recipe.id);\r\n                      props.openRecipePicker();\r\n                      props.setType(\"search\");\r\n                    }}\r\n                  >\r\n                    Search\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    isDisabled={!props.token}\r\n                    onClick={() => {\r\n                      props.setCurrentItem(props.recipe.id);\r\n                      props.openRecipePicker();\r\n                      props.setType(\"myrecipe\");\r\n                    }}\r\n                  >\r\n                    My recipes\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </Menu>\r\n            </HStack>\r\n          </Box>\r\n        </VStack>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayIngredients.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipePickerModal.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeCard.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\SearchBar.tsx",["175"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Pagination.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuLinks.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\Logo.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuToggle.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBarContainer.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeListModal.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuItem.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeSkeleton.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\WeekMenuOptions.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useHasChanged.ts",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\ConfirmModal.tsx",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":1,"nodeType":"182","messageId":"183","fix":"184"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":1,"nodeType":"182","messageId":"183","fix":"185"},{"ruleId":"186","severity":1,"message":"187","line":24,"column":10,"nodeType":"188","messageId":"189","endLine":24,"endColumn":23},{"ruleId":"186","severity":1,"message":"190","line":36,"column":23,"nodeType":"188","messageId":"189","endLine":36,"endColumn":31},{"ruleId":"186","severity":1,"message":"191","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"193","line":97,"column":6,"nodeType":"194","endLine":97,"endColumn":21,"suggestions":"195"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":1,"nodeType":"182","messageId":"183","fix":"196"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":1,"nodeType":"182","messageId":"183","fix":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"200","text":"201"},{"range":"202","text":"201"},"@typescript-eslint/no-unused-vars","'useHasChanged' is defined but never used.","Identifier","unusedVar","'pageSize' is assigned a value but never used.","'number' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["203"],{"range":"204","text":"201"},{"range":"205","text":"201"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],{"desc":"206","fix":"207"},[-1,0],[-1,0],"Update the dependencies array to be: [amount, tags, token]",{"range":"208","text":"209"},[2576,2591],"[amount, tags, token]"]