[{"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\App.tsx":"1","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\index.tsx":"2","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\Contexts.tsx":"3","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\reportWebVitals.ts":"4","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Layout.js":"5","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\UserRecipes.tsx":"6","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Home.tsx":"7","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayRecipe.tsx":"8","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\CreateRecipe.tsx":"9","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Recipes.tsx":"10","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\ProtectedRoutes.tsx":"11","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBar.tsx":"12","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useUserRecipes.ts":"13","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useWeekmenu.ts":"14","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useTags.ts":"15","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipe.ts":"16","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\shoppingListGenerator.ts":"17","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipes.ts":"18","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeCard.tsx":"19","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayIngredients.tsx":"20","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipePickerModal.tsx":"21","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeCard.tsx":"22","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Pagination.tsx":"23","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\SearchBar.tsx":"24","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuLinks.tsx":"25","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\Logo.tsx":"26","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuToggle.tsx":"27","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBarContainer.tsx":"28","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeListModal.tsx":"29","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuItem.tsx":"30","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Register.tsx":"31","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Login.tsx":"32","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\contexts\\authContext.tsx":"33"},{"size":1090,"mtime":1611218408041,"results":"34","hashOfConfig":"35"},{"size":793,"mtime":1611214978379,"results":"36","hashOfConfig":"35"},{"size":493,"mtime":1611233809534,"results":"37","hashOfConfig":"35"},{"size":425,"mtime":1611126747107,"results":"38","hashOfConfig":"35"},{"size":440,"mtime":1611214494292,"results":"39","hashOfConfig":"35"},{"size":3261,"mtime":1611234138138,"results":"40","hashOfConfig":"35"},{"size":5383,"mtime":1611234030490,"results":"41","hashOfConfig":"35"},{"size":3666,"mtime":1611234219745,"results":"42","hashOfConfig":"35"},{"size":13801,"mtime":1611233957447,"results":"43","hashOfConfig":"35"},{"size":3700,"mtime":1611234069190,"results":"44","hashOfConfig":"35"},{"size":937,"mtime":1611235739308,"results":"45","hashOfConfig":"35"},{"size":720,"mtime":1610962168804,"results":"46","hashOfConfig":"35"},{"size":800,"mtime":1610826990891,"results":"47","hashOfConfig":"35"},{"size":4901,"mtime":1610829513256,"results":"48","hashOfConfig":"35"},{"size":528,"mtime":1610095195660,"results":"49","hashOfConfig":"35"},{"size":657,"mtime":1610364023765,"results":"50","hashOfConfig":"35"},{"size":1861,"mtime":1610717715428,"results":"51","hashOfConfig":"35"},{"size":886,"mtime":1610830583770,"results":"52","hashOfConfig":"35"},{"size":3338,"mtime":1611234162817,"results":"53","hashOfConfig":"35"},{"size":1224,"mtime":1611211099293,"results":"54","hashOfConfig":"35"},{"size":3642,"mtime":1610909879502,"results":"55","hashOfConfig":"35"},{"size":2066,"mtime":1610456477566,"results":"56","hashOfConfig":"35"},{"size":1515,"mtime":1610539619875,"results":"57","hashOfConfig":"35"},{"size":7082,"mtime":1611214645392,"results":"58","hashOfConfig":"35"},{"size":2545,"mtime":1611214399082,"results":"59","hashOfConfig":"35"},{"size":280,"mtime":1610911632064,"results":"60","hashOfConfig":"35"},{"size":448,"mtime":1610962784112,"results":"61","hashOfConfig":"35"},{"size":648,"mtime":1610963142465,"results":"62","hashOfConfig":"35"},{"size":1261,"mtime":1610882895602,"results":"63","hashOfConfig":"35"},{"size":460,"mtime":1610955310289,"results":"64","hashOfConfig":"35"},{"size":4368,"mtime":1611218392765,"results":"65","hashOfConfig":"35"},{"size":3662,"mtime":1611235818820,"results":"66","hashOfConfig":"35"},{"size":2194,"mtime":1611236119689,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fxq1k9",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\App.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\index.tsx",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\Contexts.tsx",["152"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\reportWebVitals.ts",[],["153","154"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Layout.js",[],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\UserRecipes.tsx",["155"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Home.tsx",["156"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayRecipe.tsx",["157","158","159"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\CreateRecipe.tsx",["160"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Recipes.tsx",["161"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\routes\\ProtectedRoutes.tsx",["162","163"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBar.tsx",["164","165"],"﻿import { Divider } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { Logo } from './Logo'\r\nimport { MenuLinks } from './MenuLinks'\r\nimport { MenuToggle } from './MenuToggle'\r\nimport { NavBarContainer } from './NavBarContainer'\r\n\r\nexport const NavBar: React.FC = (props) => {\r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const toggle = () => setIsOpen(!isOpen)\r\n\r\n    return (\r\n\r\n        <NavBarContainer {...props}>\r\n            <Logo\r\n                w=\"100px\"\r\n                color={[\"white\", \"pink.500\", \"pink.500\", \"pink.500\"]}\r\n            />\r\n            <MenuToggle toggle={toggle} isOpen={isOpen} />\r\n            <MenuLinks isOpen={isOpen} />\r\n        </NavBarContainer>\r\n    )\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useUserRecipes.ts",["166"],"﻿import useSWR, { responseInterface } from \"swr\";\r\nimport { Recipe } from \"../types\";\r\n\r\nconst fetcher = async (url: string, token: string) => {\r\n    const response = await fetch(url, {\r\n        headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n\r\n    if (response.status === 401) {\r\n        throw new Error(\"Unauthorized\")\r\n    }\r\n\r\n    return await response.json()\r\n}\r\n\r\nexport function useUserRecipes(token: string | null | undefined) {\r\n    const { data, mutate, error } = useSWR(token ? ['recipe/user', token] : null, fetcher) as responseInterface<Recipe[], Error>\r\n\r\n    const loading = !data && !error;\r\n\r\n    const empty = !data || (!!data && data.length === 0)\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        data,\r\n        mutate,\r\n        empty\r\n    };\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useWeekmenu.ts",["167","168","169"],"﻿import { parse } from \"querystring\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Recipe } from \"../types\";\r\n\r\nconst weekmenuItemFetcher = async (token: string | null | undefined, excludeIds: string) => {\r\n    const response = await fetch(\"recipe/weekmenu/item\" + excludeIds, {\r\n        headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    return await response.json()\r\n}\r\n\r\nconst weekmenuSpecificItemFetcher = async (token: string | null | undefined, id: number) => {\r\n    const response = await fetch(\"recipe/\" + id, {\r\n        headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    return await response.json()\r\n}\r\n\r\nconst weekmenuFetcher = async (token: string | null | undefined) => {\r\n    const response = await fetch(\"recipe/weekmenu?amount=5\", {\r\n        headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    return await response.json()\r\n}\r\n\r\nexport function useWeekmenu(amount: number, token: string | null | undefined) {\r\n    const [data, setData] = useState<Recipe[] | null>()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState<string | null>()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        let isCanceled = false;\r\n        const controller = new AbortController();\r\n\r\n        const myWeekMenu = localStorage.getItem(\"weekmenu\")\r\n        let parsedData\r\n        if (myWeekMenu) {\r\n            try {\r\n                parsedData = JSON.parse(myWeekMenu)\r\n            } catch (e) {\r\n                localStorage.removeItem(\"weekmenu\")\r\n                setError(e.message)\r\n            }\r\n        }\r\n\r\n        if (!parsedData || parsedData.length < 5) {\r\n            const runHandler = async () => {\r\n                try {\r\n                    const response = await fetch(\"recipe/weekmenu/?amount=\" + amount, {\r\n                        headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n                    });\r\n                    const data = await response.json()\r\n                    if (isCanceled) {\r\n                        return;\r\n                    }\r\n                    localStorage.setItem(\"weekmenu\", JSON.stringify(data))\r\n                    setData(data)\r\n                    setError(\"\")\r\n                } catch (e) {\r\n                    setError(e.message)\r\n                }\r\n            }\r\n            runHandler()\r\n        } else {\r\n            setData(parsedData)\r\n        }\r\n\r\n        setLoading(false)\r\n\r\n        return () => {\r\n            isCanceled = true;\r\n            controller.abort();\r\n        };\r\n    }, [])\r\n\r\n    const onSwap = async (id: number) => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n        if (!data) {\r\n            setError(\"No data to swap!\")\r\n            return\r\n        }\r\n\r\n        const excludeRecipes = data.reduce((accumulator, recipe) => {\r\n            return accumulator + \"excludeId=\" + recipe.id + \"&\"\r\n        }, \"/?\")\r\n\r\n        try {\r\n            const recipe = await weekmenuItemFetcher(token, excludeRecipes)\r\n            if (recipe) {\r\n                const index = data.findIndex(recipe => recipe.id === id)\r\n                const newWeekmenu = [...data.slice(0, index), recipe, ...data.slice(index + 1)]\r\n                localStorage.setItem(\"weekmenu\", JSON.stringify(newWeekmenu))\r\n                setData(newWeekmenu);\r\n                setError(\"\")\r\n            }\r\n        } catch (e) {\r\n            setError(e.message)\r\n        }\r\n    }\r\n\r\n    const onIdSwap = async (oldId: number, newId: number) => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n        if (!data) {\r\n            setError(\"No data to swap!\")\r\n            return\r\n        }\r\n\r\n        if (oldId === newId || data.find(r => r.id === newId) !== undefined) {\r\n            setError(`Cannot swap recipe with ${oldId} with ${newId}!`)\r\n            return\r\n        }\r\n\r\n        try {\r\n            const recipe = await weekmenuSpecificItemFetcher(token, newId)\r\n            if (recipe) {\r\n                const index = data.findIndex(recipe => recipe.id === oldId)\r\n                const newWeekmenu = [...data.slice(0, index), recipe, ...data.slice(index + 1)]\r\n                localStorage.setItem(\"weekmenu\", JSON.stringify(newWeekmenu))\r\n                setData(newWeekmenu);\r\n                setError(\"\")\r\n            }\r\n        } catch (e) {\r\n            setError(e.message)\r\n        }\r\n    }\r\n\r\n    const onSwapAll = async () => {\r\n        setLoading(true)\r\n        try {\r\n            const data = await weekmenuFetcher(token)\r\n            localStorage.setItem(\"weekmenu\", JSON.stringify(data))\r\n            setData(data)\r\n        } catch (e) {\r\n            setError(e.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        data,\r\n        onSwap,\r\n        onSwapAll,\r\n        onIdSwap\r\n    };\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useTags.ts",["170"],"﻿import useSWR, { responseInterface } from \"swr\";\r\nimport { Tags } from \"../types\";\r\n\r\nconst fetcher = async (url: string) => {\r\n    const response = await fetch(url);\r\n    return await response.json()\r\n}\r\n\r\nexport function useTags() {\r\n    const { data, mutate, error } = useSWR('tag', fetcher) as responseInterface<Tags[], any>\r\n\r\n    const loading = !data && !error;\r\n\r\n    const empty = !!data && data.length === 0\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        data,\r\n        mutate,\r\n        empty\r\n    };\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipe.ts",["171"],"﻿import useSWR, { responseInterface } from \"swr\";\r\nimport { Recipe } from \"../types\";\r\n\r\nconst fetcher = async (url: string, token: string) => {\r\n    const response = await fetch(url, {\r\n        headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    return await response.json()\r\n}\r\n\r\nexport function useRecipe(id: string | null | undefined, token: string | null | undefined) {\r\n    const { data, mutate, error } = useSWR(id ? [\"recipe/\" + id, token] : null, fetcher) as responseInterface<Recipe, any>\r\n\r\n    const loading = !data && !error;\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        data,\r\n        mutate,\r\n    };\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\utils\\shoppingListGenerator.ts",["172","173"],"﻿import { Ingredients, Recipe } from \"../types\";\r\nimport * as _ from \"lodash\";\r\nimport convert from 'convert';\r\n\r\ninterface RecipeItem {\r\n    itemName: string,\r\n    amount: number\r\n    suffix: string\r\n}\r\n\r\nexport const generateShoppingList = (recipes: Recipe[]) => {\r\n    const ingredients = _.flatMap(recipes, getIngredients)\r\n    console.log(\"or\", ingredients);\r\n    return sumIngredients(ingredients)\r\n}\r\n\r\nconst getIngredients = (recipe: Recipe) => {\r\n    return recipe.ingredients;\r\n}\r\n\r\nconst sumIngredients = (ingredients: Ingredients[]) => {\r\n    let groupIngredients = [] as Ingredients[]\r\n\r\n    ingredients.forEach(ingredient => {\r\n        let index = groupIngredients.findIndex(i => i.name.toLowerCase() === ingredient.name.toLowerCase())\r\n        if (index < 0) {\r\n            groupIngredients.push({ ...ingredient })\r\n        } else {\r\n            if (groupIngredients[index].suffix !== ingredient.suffix) {\r\n                const num = tryToConvert(ingredient.amount, ingredient.suffix, groupIngredients[index].suffix)\r\n                console.log(`TRying to convert ${ingredient.suffix} to ${groupIngredients[index].suffix}`);\r\n                if (num !== -1) {\r\n                    groupIngredients[index].amount = groupIngredients[index].amount + num\r\n                } else {\r\n                    groupIngredients.push(ingredient)\r\n                }\r\n            } else {\r\n                groupIngredients[index].amount = groupIngredients[index].amount + ingredient.amount\r\n            }\r\n        }\r\n    })\r\n\r\n    console.log(\"gi\", groupIngredients);\r\n\r\n    return groupIngredients\r\n}\r\n\r\nconst tryToConvert = (value: number, from: any, to: any) => {\r\n    try {\r\n        console.log(convert(value).from(from).to(to));\r\n        return convert(value).from(from).to(to)\r\n    } catch {\r\n        console.log(\"Failed\");\r\n        return -1\r\n    }\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\hooks\\useRecipes.ts",["174"],"﻿import useSWR, { responseInterface } from \"swr\";\r\nimport { RecipePaginated } from \"../types\";\r\n\r\nconst fetcher = async (url: string, token: string) => {\r\n    const response = await fetch(url, {\r\n        headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    return await response.json()\r\n}\r\n\r\nexport function useRecipes(token: string | null | undefined, query: string | null | undefined, shouldFetch: boolean) {\r\n    let url = 'recipe'\r\n    if (query) {\r\n        url = url + \"/?\" + query\r\n    }\r\n\r\n    const { data, mutate, error } = useSWR(shouldFetch ? [url, token] : null, fetcher) as responseInterface<RecipePaginated, any>\r\n\r\n    const loading = !data && !error;\r\n\r\n    const empty = !data || (!!data && !data.recipes) || (data.recipes.length === 0)\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        data,\r\n        mutate,\r\n        empty\r\n    };\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\MiniRecipeCard.tsx",["175"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\DisplayIngredients.tsx",["176"],"﻿import { Box, Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { Ingredients } from '../types';\r\n\r\ninterface Props {\r\n    ingredients: Ingredients[]\r\n}\r\n\r\nexport const DisplayIngredients: React.FC<Props> = (props) => {\r\n    return (\r\n        <Box bg=\"pink.50\" borderColor=\"pink.500\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p=\"2\">\r\n            <Table size=\"sm\" colorScheme=\"pink\">\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>Ingredient</Th>\r\n                        <Th isNumeric>Amount</Th>\r\n                        <Th>Suffix</Th>\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                    {props.ingredients.map(ingredient => (\r\n                        < Tr key={`${ingredient.name}-${ingredient.amount}-${ingredient.suffix}`}>\r\n                            <Td>{ingredient.name}</Td>\r\n                            <Td isNumeric>{Math.round((ingredient.amount + Number.EPSILON) * 100) / 100}</Td>\r\n                            <Td>{ingredient.suffix}</Td>\r\n                        </Tr>\r\n                    ))}\r\n                </Tbody>\r\n            </Table>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipePickerModal.tsx",["177"],"﻿import { Button, Center, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Spinner, Text, VStack, HStack, Input } from '@chakra-ui/react';\r\nimport React, { SetStateAction, useState } from 'react';\r\nimport { Recipe, RecipePaginated } from '../types';\r\nimport { RecipeListModal } from './RecipeListModal';\r\n\r\ninterface Query {\r\n    searchText: string | undefined\r\n    pageSize: number\r\n}\r\n\r\ninterface Props {\r\n    myRecipes: Recipe[] | undefined\r\n    searchRecipes: RecipePaginated | undefined\r\n    query: Query\r\n    setQuery: React.Dispatch<SetStateAction<Query>>\r\n    error: Error | undefined\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    loading: boolean\r\n    onIdSwap: (newId: number) => void\r\n    type: \"search\" | \"myrecipe\" | undefined\r\n}\r\n\r\nexport const RecipePickerModal: React.FC<Props> = (props) => {\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [searchText, setSearchText] = useState<string>(\"\")\r\n\r\n    const onIdSwap = async (id: number) => {\r\n        setLoading(true)\r\n        await props.onIdSwap(id)\r\n        props.onClose()\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={props.isOpen}\r\n                onClose={props.onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Pick a recipe</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <VStack>\r\n                            {props.type === \"search\" &&\r\n                                <HStack>\r\n                                    <Input onChange={(e) => setSearchText(e.target.value)} value={searchText} />\r\n                                    <Button\r\n                                        onClick={() => props.setQuery({ pageSize: 10, searchText })}\r\n                                    >\r\n                                        Search\r\n                                    </Button>\r\n                                </HStack>\r\n                            }\r\n                            {props.searchRecipes && <Text> {`Showing ${props.searchRecipes.recipes.length + 1 || 0}  recipes`}</Text>}\r\n                            {props.myRecipes && <Text> {`Showing ${props.myRecipes.length + 1 || 0}  recipes`}</Text>}\r\n                            {props.loading ?\r\n                                <Center>\r\n                                    <Spinner />\r\n                                </Center> :\r\n                                    props.error ||\r\n                                !props.type ||\r\n                                !(props.myRecipes || props.searchRecipes?.recipes) ?\r\n                                    <Text> Could not retrive recipes </Text> :\r\n                                        <RecipeListModal\r\n                                            loading={loading}\r\n                                            onIdSwap={onIdSwap}\r\n                                            recipes={props.type === \"myrecipe\" ? props.myRecipes! : props.searchRecipes!.recipes}\r\n                                        />\r\n                            }\r\n                            {loading && <Center pt={2}><Spinner /></Center>}\r\n                        </VStack>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button colorScheme=\"yellow\" mr={3} onClick={props.onClose}>\r\n                            Close\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeCard.tsx",["178"],"﻿import React from 'react';\r\nimport { Badge, Box, HStack, Image } from '@chakra-ui/react';\r\nimport { Recipe } from '../types';\r\nimport { useHistory } from 'react-router';\r\n\r\ntype Props = {\r\n    recipe: Recipe;\r\n    onTagClick?: (tag: string) => void\r\n};\r\n\r\nexport const RecipeCard: React.FC<Props> = (props) => {\r\n    const history = useHistory()\r\n    return (\r\n        <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\r\n\r\n            <Image src={props.recipe.imgUrl} alt={props.recipe.title} objectFit=\"cover\" overflow=\"hidden\" height=\"200px\" width=\"300px\" />\r\n            <Box p=\"6\">\r\n                <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                    isTruncated\r\n                    onClick={() => history.push(\"/recipes/\" + props.recipe.id)}\r\n                    _hover={{ cursor: \"pointer\", color: \"pink.500\" }}\r\n                >\r\n                    {props.recipe.title}\r\n                </Box>\r\n\r\n                <Box>\r\n                    {props.recipe.shortDescription}\r\n                </Box>\r\n                <HStack>\r\n                    {props.recipe.tags.map((tag, i) => (\r\n                        <Badge\r\n                            key={tag.name}\r\n                            borderRadius=\"full\"\r\n                            px=\"2\"\r\n                            colorScheme=\"teal\"\r\n                            onClick={() => { if (props.onTagClick) { props.onTagClick(tag.name) } }}\r\n                            _hover={{ cursor: \"pointer\", backgroundColor: \"blue.300\" }}\r\n                        >\r\n                            {tag.name}\r\n                        </Badge>\r\n                    ))}\r\n                </HStack>\r\n\r\n                <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n\r\n                    <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n                        {props.recipe.vote} score\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Pagination.tsx",["179"],"﻿import { Button, HStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n    totalPage: number;\r\n    onPageClick: (tag: number) => void\r\n    hasNext: boolean;\r\n    hasPrevious: boolean;\r\n    currentPage: number | null | undefined;\r\n}\r\n\r\nexport const Pagination: React.FC<Props> = (props) => {\r\n    return (\r\n        <HStack>\r\n            <Button\r\n                disabled={!props.hasPrevious}\r\n                onClick={() => {\r\n                    if (props.currentPage) {\r\n                        props.onPageClick(props.currentPage - 1)\r\n                    }\r\n\r\n                }}>\r\n                    Previous\r\n                </Button>\r\n\r\n            {[...Array.from({ length: props.totalPage }, (_, i) => i + 1)].map(num => (\r\n                <Button\r\n                    disabled={props?.currentPage === num}\r\n                    key={num}\r\n                    onClick={() => props.onPageClick(num)}\r\n                    colorScheme={props?.currentPage === num ? \"pink\" : undefined}\r\n                    variant={props?.currentPage === num ? \"solid\" : undefined}>\r\n                    {num}\r\n                </Button>\r\n            ))}\r\n\r\n            <Button\r\n                disabled={!props.hasNext}\r\n                onClick={() => {\r\n                    if (props.currentPage) {\r\n                        props.onPageClick(props.currentPage + 1)\r\n                    }\r\n                }}>\r\n                    Next\r\n                </Button>\r\n \r\n        </HStack>\r\n    );\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\SearchBar.tsx",["180"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuLinks.tsx",["181"],"﻿import { Box, Menu, MenuButton, MenuList, Stack, MenuItem as MenuItemChakra, Button, MenuGroup, } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { MenuItem } from './MenuItem';\r\nimport { useMediaQuery } from \"@chakra-ui/react\"\r\nimport { ChevronDownIcon } from '@chakra-ui/icons'\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    isOpen: boolean\r\n}\r\n\r\nexport const MenuLinks: React.FC<Props> = ({ isOpen }) => {\r\n    const [isLargerThan420] = useMediaQuery(\"(min-width: 30em)\")\r\n\r\n    const logoutPath = \"/logout\"\r\n    const userName = \"hi\"\r\n    const profilePath = \"/profile\"\r\n\r\n    const buttonMenu = (\r\n        <Menu>\r\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />} fontWeight=\"normal\" colorScheme=\"pink\">\r\n                Profile\r\n            </MenuButton>\r\n            <MenuList>\r\n                <MenuItemChakra as={Link} to=\"/create-recipes\">Create Recipe</MenuItemChakra>\r\n                <MenuItemChakra as={Link} to=\"/my-recipes\">My Recipes</MenuItemChakra>\r\n                <MenuGroup title={`${userName}`}>\r\n                    <MenuItemChakra as={Link} to={profilePath}>\r\n                        Account\r\n                    </MenuItemChakra>\r\n                    <MenuItemChakra as={Link} to={logoutPath}>\r\n                        Logout\r\n                    </MenuItemChakra>\r\n                </MenuGroup>\r\n            </MenuList>\r\n        </Menu>\r\n    )\r\n\r\n    const listMenu = (\r\n        <React.Fragment>\r\n            <MenuItem to=\"/recipes\">Recipe</MenuItem>\r\n            <MenuItem to=\"/create-recipes\">Create Recipe</MenuItem>\r\n            <MenuItem to=\"/my-recipes\">My Recipes</MenuItem>\r\n            <MenuItem to={profilePath}>\r\n                {`${userName}'s account`}\r\n            </MenuItem>\r\n            <MenuItem to={logoutPath}>\r\n                Logout\r\n            </MenuItem>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <Box\r\n            display={{ base: isOpen ? \"block\" : \"none\", sm: \"block\" }}\r\n            flexBasis={{ base: \"100%\", sm: \"auto\" }}\r\n        >\r\n            <Stack\r\n                spacing={8}\r\n                align=\"center\"\r\n                justify={[\"center\", \"flex-end\", \"flex-end\", \"flex-end\"]}\r\n                direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n                pt={[4, 0, 0, 0]}\r\n            >\r\n                <MenuItem to=\"/\">Home</MenuItem>\r\n                <MenuItem to=\"/recipes\">Recipes</MenuItem>\r\n                {isLargerThan420 ? buttonMenu : listMenu}\r\n            </Stack>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\Logo.tsx",["182"],"﻿import React from \"react\"\r\nimport { Box, Text } from \"@chakra-ui/react\"\r\n\r\nexport const Logo = (props: any) => {\r\n    return (\r\n        <Box {...props}>\r\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n                WeekMenu\r\n            </Text>\r\n        </Box>\r\n    )\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuToggle.tsx",["183"],"﻿import React from \"react\"\r\nimport { Box } from \"@chakra-ui/react\"\r\nimport { HamburgerIcon, CloseIcon } from '@chakra-ui/icons'\r\n\r\ninterface Props {\r\n    isOpen: boolean\r\n    toggle: () => void\r\n}\r\n\r\nexport const MenuToggle: React.FC<Props> = ({ toggle, isOpen }) => {\r\n    return (\r\n        <Box display={{ base: \"block\", sm: \"none\" }} onClick={() => toggle()}>\r\n            {isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n        </Box>\r\n    )\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\NavBarContainer.tsx",["184"],"﻿import { Flex } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nexport const NavBarContainer: React.FC = ({ children, ...props }) => {\r\n    return (\r\n        <Flex\r\n            as=\"nav\"\r\n            align=\"center\"\r\n            justify=\"space-between\"\r\n            wrap=\"wrap\"\r\n            w=\"100%\"\r\n            mb={4}\r\n            p={4}\r\n            bg={[\"pink.500\", \"transparent\", \"transparent\", \"transparent\"]}\r\n            color={[\"white\", \"pink.700\", \"pink.700\", \"pink.700\"]}\r\n            borderBottom=\"1px\"\r\n            borderBottomColor=\"pink.700\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </Flex>\r\n    )\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\RecipeListModal.tsx",["185"],"﻿import { Button, Heading, Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react';\r\nimport { Recipe } from '../types';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n    recipes: Recipe[]\r\n    loading: boolean\r\n    onIdSwap: (newId: number) => void\r\n}\r\n\r\nexport const RecipeListModal: React.FC<Props> = (props) => {\r\n    return (\r\n        <Table variant=\"simple\">\r\n            <Thead>\r\n                <Tr>\r\n                    <Th>Title</Th>\r\n                    <Th>Action</Th>\r\n                </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n                {props.recipes.map(recipe => (\r\n                    <Tr key={recipe.id}>\r\n                        <Td><Heading size=\"xs\">{recipe.title}</Heading></Td>\r\n                        <Td>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                isDisabled={props.loading}\r\n                                disabled={props.loading}\r\n                                onClick={() => props.onIdSwap(recipe.id)}\r\n                            >\r\n                                Add\r\n                            </Button>\r\n                        </Td>\r\n                    </Tr>\r\n                ))}\r\n            </Tbody>\r\n        </Table>\r\n    );\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\navbar\\MenuItem.tsx",["186"],"﻿import React from \"react\"\r\nimport { Text, Link } from \"@chakra-ui/react\"\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    isLast?: boolean\r\n    to: string\r\n}\r\n\r\nexport const MenuItem: React.FC<Props> = ({ children, isLast, to = \"/\", ...rest }) => {\r\n    return (\r\n        <Link as={RouterLink} to={to}>\r\n            <Text display=\"block\" {...rest}>\r\n                {children}\r\n            </Text>\r\n        </Link>\r\n    )\r\n}","C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Register.tsx",["187","188"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\components\\Login.tsx",["189"],"C:\\Users\\odden\\source\\repos\\WeekMenuSA\\client-app\\src\\contexts\\authContext.tsx",["190"],{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"200"},{"ruleId":"201","severity":1,"message":"202","line":13,"column":10,"nodeType":"203","messageId":"204","endLine":13,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"205"},{"ruleId":"201","severity":1,"message":"206","line":14,"column":3,"nodeType":"203","messageId":"204","endLine":14,"endColumn":8},{"ruleId":"201","severity":1,"message":"202","line":20,"column":10,"nodeType":"203","messageId":"204","endLine":20,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"207"},{"ruleId":"201","severity":1,"message":"202","line":12,"column":10,"nodeType":"203","messageId":"204","endLine":12,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"208"},{"ruleId":"201","severity":1,"message":"202","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"209"},{"ruleId":"201","severity":1,"message":"210","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"211"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"212"},{"ruleId":"201","severity":1,"message":"213","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":75,"column":8,"nodeType":"216","endLine":75,"endColumn":10,"suggestions":"217"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"218"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"219"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"220"},{"ruleId":"201","severity":1,"message":"221","line":5,"column":11,"nodeType":"203","messageId":"204","endLine":5,"endColumn":21},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"222"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"223"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"224"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"225"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"226"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"227"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"228"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"229"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"230"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"231"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"232"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"233"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"234"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","fix":"235"},{"ruleId":"201","severity":1,"message":"236","line":73,"column":17,"nodeType":"203","messageId":"204","endLine":73,"endColumn":23},{"ruleId":"201","severity":1,"message":"236","line":77,"column":17,"nodeType":"203","messageId":"204","endLine":77,"endColumn":23},{"ruleId":"201","severity":1,"message":"237","line":80,"column":10,"nodeType":"203","messageId":"204","endLine":80,"endColumn":24},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"238","text":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],{"range":"242","text":"239"},"@typescript-eslint/no-unused-vars","'useAuth' is defined but never used.","Identifier","unusedVar",{"range":"243","text":"239"},"'color' is defined but never used.",{"range":"244","text":"239"},{"range":"245","text":"239"},{"range":"246","text":"239"},"'Divider' is defined but never used.",{"range":"247","text":"239"},{"range":"248","text":"239"},"'parse' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'amount' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["249"],{"range":"250","text":"239"},{"range":"251","text":"239"},{"range":"252","text":"239"},"'RecipeItem' is defined but never used.",{"range":"253","text":"239"},{"range":"254","text":"239"},{"range":"255","text":"239"},{"range":"256","text":"239"},{"range":"257","text":"239"},{"range":"258","text":"239"},{"range":"259","text":"239"},{"range":"260","text":"239"},{"range":"261","text":"239"},{"range":"262","text":"239"},{"range":"263","text":"239"},{"range":"264","text":"239"},{"range":"265","text":"239"},{"range":"266","text":"239"},"'values' is assigned a value but never used.","'isProviderType' is defined but never used.",[-1,0],"","no-global-assign","no-unsafe-negation",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"267","fix":"268"},[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [amount, token]",{"range":"269","text":"270"},[2593,2595],"[amount, token]"]